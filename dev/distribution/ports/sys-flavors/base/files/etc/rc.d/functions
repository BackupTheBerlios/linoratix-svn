#!/bin/bash

NORMAL="\E[0;39m"
BLUE="\E[1;34m"
RED="\E[1;31m"
GREEN="\E[1;32m"
YELLOW="\E[1;33m"

COLUMNS=$(stty size)
COLUMNS=${COLUMNS##* }
COL=$[ $COLUMNS - 15 ]
WCOL=$[ $COLUMNS - 35 ]
SCOL=$[ $COLUMNS - $COLUMNS + 1 ]
SET_COL="echo -en \\033[${COL}G"
SET_WCOL="echo -en \\033[${WCOL}G"
SET_SCOL="echo -en \\033[${SCOL}G"
CURS_UP="echo -en \\033[A"

if [ -f /tmp/sp_progress ]; then
	SP_PROGRESS=$(cat /tmp/sp_progress)
	SP_PROGRESS=$(($SP_PROGRESS + 1))
else
	SP_PROGRESS=0
fi
SP_NUM=$(ls -l /etc/runlevels/boot |wc -l)
SP_NUM2=$(ls -l /etc/runlevels/default |wc -l)
SP_NUM=$(expr $SP_NUM + $SP_NUM2)

if [ "$do_shutdown" = "yes" ]; then
	SP_PROGRESS=0
	echo "show 0" > /proc/splash
	SP_NUM=$(ls -l /etc/runlevels/shutdown |wc -l)
fi
	
function set_progress()
{
	local stat
	stat=$(( ( 65534 - 8000 ) * ( $SP_PROGRESS + 1 ) / $SP_NUM ))
	echo "show $stat" > /proc/splash
	SP_PROGRESS=$(( $SP_PROGRESS + 1 ))
	export SP_PROGRESS
}

function write_message()
{
	if [ "$2" == "warn" ]
	then
		echo -e " $YELLOW>>$NORMAL $1"
	elif [ "$2" == "info" -o "$2" = "" ]
	then
		echo -e " $GREEN>>$NORMAL $1"
	elif [ "$2" == "error" ]
	then
		echo -e " $RED>>$NORMAL $1"
	elif [ "$2" == "usage" ]
	then
		echo -e " $BLUE>>$NORMAL $1"
	else
		echo -e "  "$NORMAL $1
	fi
}

function check_success() 
{
	$CURS_UP
	if [ "$1" = "0" ]
	then
		$SET_COL
		echo -n "[  "
		echo -ne $GREEN
		echo -n "OK"
		echo -ne $NORMAL
		echo "  ]"
	else
		$SET_SCOL
		echo -ne $RED
		echo -ne $NORMAL
		$SET_COL
		echo -n "["
		echo -ne $RED
		echo -n "FAILED"
		echo -ne $NORMAL
		echo "]"
	fi
}

