--- coreutils-4.5.3/src/su.c.signal	2003-01-15 11:59:59.000000000 +0000
+++ coreutils-4.5.3/src/su.c	2003-01-15 12:08:49.000000000 +0000
@@ -482,7 +482,8 @@
   int argno = 1;
 #ifdef USE_PAM
   int child;
-  sigset_t ourset;
+  sigset_t ourset, oldset;
+  struct sigaction oldaction;
   int status;
 
   retval = pam_open_session(pamh,0);
@@ -497,8 +498,30 @@
   if(pam_copyenv(pamh) != PAM_SUCCESS)
      fprintf (stderr, "error copying PAM environment\n");
   
+  /* parent only */
+  sigfillset(&ourset);
+  if (sigprocmask(SIG_BLOCK, &ourset, &oldset)) {
+    fprintf(stderr, "%s: signal malfunction\n", PROGRAM_NAME);
+    caught = 1;
+  }
+  if (!caught) {
+    struct sigaction action;
+    action.sa_handler = su_catch_sig;
+    sigemptyset(&action.sa_mask);
+    action.sa_flags = 0;
+    sigemptyset(&ourset);
+    if (sigaddset(&ourset, SIGTERM)
+        || sigaddset(&ourset, SIGALRM)
+        || sigaction(SIGTERM, &action, &oldaction)
+        || sigprocmask(SIG_UNBLOCK, &ourset, NULL)) {
+      fprintf(stderr, "%s: signal masking malfunction\n", PROGRAM_NAME);
+      caught = 1;
+    }
+  }
   child = fork();
   if (child == 0) {  /* child shell */
+  sigprocmask(SIG_SETMASK, &oldset, NULL);
+  if (!caught) sigaction (SIGTERM, &oldaction, NULL);
   change_identity (pw);
   pam_end(pamh, 0);
 #endif
@@ -547,26 +570,6 @@
       fprintf(stderr, "can not fork user shell: %s", strerror(errno));
       exit(1);
   }
-  /* parent only */
-  sigfillset(&ourset);
-  if (sigprocmask(SIG_BLOCK, &ourset, NULL)) {
-    fprintf(stderr, "%s: signal malfunction\n", PROGRAM_NAME);
-    caught = 1;
-  }
-  if (!caught) {
-    struct sigaction action;
-    action.sa_handler = su_catch_sig;
-    sigemptyset(&action.sa_mask);
-    action.sa_flags = 0;
-    sigemptyset(&ourset);
-    if (sigaddset(&ourset, SIGTERM)
-        || sigaddset(&ourset, SIGALRM)
-        || sigaction(SIGTERM, &action, NULL)
-        || sigprocmask(SIG_UNBLOCK, &ourset, NULL)) {
-      fprintf(stderr, "%s: signal masking malfunction\n", PROGRAM_NAME);
-      caught = 1;
-    }
-  }
   if (!caught) {
     do {
       int pid;
