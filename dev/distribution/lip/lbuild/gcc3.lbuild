[Meta]
Group = dev-gcc/gcc3
Name = gcc3
Version = 3.4.3
Languages = [de, en]
Homepage = http://www.gnu.org/
License = GPL

[Maintainer]
Maintainers = 1
BugreportMail = bugs@linoratix.com
Name[0] = Gehring
Surname[0] = Jan
EMail[0] = jfried@linoratix.com
Homepage[0] = http://developer.linoratix.com/~jfried/
Nick[0] = jfried

[Description]
de = Die GNU Compiler Kollektion
en = The GNU compiler collection

[Dependencies]
sys-libs/glibc = >=2.3.4

[DownloadServer]
Main = http://ftp.gnu.org/gnu/gcc/gcc-3.4.3/
Mirrors = 1
Mirror[0] = http://download.linoratix.com/distfiles/

[SourceFiles]
SourceFiles = 2
SourceFile[0] = gcc-3.4.3.tar.bz2
SourceFile[1] = gcc-core-3.4.3.tar.bz2
SourceFile[2] = gcc-g++-3.4.3.tar.bz2

[PrepareBuild]

#SourceFile[3] = gcc-g77-3.4.3.tar.bz2
#SourceFile[4] = gcc-java-3.4.3.tar.bz2
#SourceFile[5] = gcc-objc-3.4.3.tar.bz2


if [ "${BUILD_BUILD_ENV}" ]; then
	set +h
	umask 022
	
	export PATH=/tools/bin:$PATH
	export LC_ALL=POSIX
	
	tar xvjf gcc-3.4.3.tar.bz2
	tar xvjf gcc-core-3.4.3.tar.bz2

	if [ "${STAGE}" = "1" ]; then
		tar xvjf gcc-g++3.4.3.tar.bz2
	fi

	cd gcc-3.4.3
	if [ `uname -m` = "sparc64" ]; then
		patch -Np1 -i ${PATCH_DIR}/gcc-3.4.3-specs-2.patch
		patch -Np1 -i ${PATCH_DIR}/gcc-3.4.3-posix-1.patch
		patch -Np1 -i ${PATCH_DIR}/gcc-3.4.3-fix_configure_for_target_native-1.patch
		sed -i '/#define STANDARD_INCLUDE_DIR/s@"/usr/include"@0@g' gcc/cppdefault.c
		sed -i 's@\(^NATIVE_SYSTEM_HEADER_DIR =\).*@\1 /tools/include@g' \
			gcc/Makefile.in
	else
		if [ "${STAGE}" = "1" ]; then
			# patch -Np1 -i ${PATCH_DIR}/gcc-3.4.3-linkonce-1.patch
			patch -Np1 -i ${PATCH_DIR}/gcc-3.4.3-no_fixincludes-1.patch
			patch -Np1 -i ${PATCH_DIR}/gcc-3.4.3-specs-2.patch
		fi
	fi
	cd ..
	
	mkdir gcc-build
	cd gcc-build

	if [ `uname -m` = "sparc64" ]; then
		../gcc-3.4.3/configure --prefix=/tools --libdir=/tools/lib64 \
			--libexecdir=/tools/lib64 --with-local-prefix=/tools --enable-long-long \
			--enable-c99 --enable-shared --enable-threads=posix --enable-__cxa_atexit \
			--disable-nls --enable-languages=c
	else
		if [ "${STAGE}" = "0" ]; then
			CC=gcc ../gcc-3.4.3/configure --prefix=/tools \
				--libexecdir=/tools/lib --with-local-prefix=/tools \
				--disable-nls --enable-shared --enable-languages=c
		fi

		if [ "${STAGE}" = "1" ]; then
			CC=gcc ../gcc-3.4.3/configure --prefix=/tools \
				--libexecdir=/tools/lib --with-local-prefix=/tools \
				--enable-clocale=gnu --enable-shared \
				--enable-threads=posix --enable-__cxa_atexit \
				--enable-languages=c,c++ --disable-libstdcxx-pch
		fi
	fi
fi


[Build]
if [ "${BUILD_BUILD_ENV}" ]; then
	set +h
	umask 022
	
	export PATH=/tools/bin:$PATH
	export LC_ALL=POSIX
	
	cd gcc-build
	if [ "${STAGE}" = "0" ]; then
		make bootstrap -j${PARALLEL_BUILDS}
		make -j${PARALLEL_BUILDS}
	elif [ "${STAGE}" = "1" ]; then
		make
		# -- no check yet make -k check
	fi
fi


[Install]
if [ "${BUILD_BUILD_ENV}" ]; then
	set +h
	umask 022
	
	export PATH=/tools/bin:$PATH
	export LC_ALL=POSIX

	cd gcc-build
	make install
	[ "${STAGE}" = "0" ] && ln -s gcc /tools/bin/cc
fi
