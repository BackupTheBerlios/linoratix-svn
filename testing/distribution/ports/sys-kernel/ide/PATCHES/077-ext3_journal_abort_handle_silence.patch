# This is a BitKeeper generated diff -Nru style patch.
#
# ChangeSet
#   2005/01/04 21:27:23-08:00 sct@redhat.com 
#   [PATCH] ext3: cleanup handling of aborted transactions.
#   
#   This patch improves ext3's error logging when we encounter an on-disk
#   corruption.  Previously, a transaction (such as a truncate) which encountered
#   many corruptions (eg.  a single highly-corrupt indirect block) would emit
#   copious "aborting transaction" errors to the log.
#   
#   Even worse, encountering an aborted journal can count as such an error,
#   leading to a flood of spurious "aborting transaction: Journal has aborted"
#   errors.
#   
#   With the fix, only emit that message on the first error.  The patch also
#   restores a missing \n in that printk path.
#   
#   Signed-off-by: Stephen Tweedie <sct@redhat.com>
#   Signed-off-by: Andrew Morton <akpm@osdl.org>
#   Signed-off-by: Linus Torvalds <torvalds@osdl.org>
# 
# fs/ext3/super.c
#   2005/01/04 20:24:30-08:00 sct@redhat.com +9 -4
#   ext3: cleanup handling of aborted transactions.
# 
diff -Nru a/fs/ext3/super.c b/fs/ext3/super.c
--- a/fs/ext3/super.c	2005-01-22 22:55:48 -08:00
+++ b/fs/ext3/super.c	2005-01-22 22:55:48 -08:00
@@ -108,14 +108,19 @@
 	char nbuf[16];
 	const char *errstr = ext3_decode_error(NULL, err, nbuf);
 
-	printk(KERN_ERR "%s: aborting transaction: %s in %s", 
-	       caller, errstr, err_fn);
-
 	if (bh)
 		BUFFER_TRACE(bh, "abort");
-	journal_abort_handle(handle);
+
 	if (!handle->h_err)
 		handle->h_err = err;
+
+	if (is_handle_aborted(handle))
+		return;
+
+	printk(KERN_ERR "%s: aborting transaction: %s in %s\n",
+	       caller, errstr, err_fn);
+
+	journal_abort_handle(handle);
 }
 
 /* Deal with the reporting of failure conditions on a filesystem such as
