# This is a BitKeeper generated diff -Nru style patch.
#
# ChangeSet
#   2005/01/03 20:41:13-08:00 zwane@linuxpower.ca 
#   [PATCH] Cyrix MII cpuid returns stale %ecx
#   
#   This patch is for the following bug, thanks to Ondrej Zary for reporting,
#   testing and submitting a patch.
#   
#   http://bugzilla.kernel.org/show_bug.cgi?id=3767
#   
#   It appears that the Cyrix MII won't touch %ecx at all resulting in stale
#   data being returned as extended attributes, so clear ecx before issuing the
#   cpuid.  I have also made the capability print code display all the
#   capability words for easier debugging in future.
#   
#   Signed-off-by: Zwane Mwaikambo <zwane@linuxpower.ca>
#   Signed-off-by: Andrew Morton <akpm@osdl.org>
#   Signed-off-by: Linus Torvalds <torvalds@osdl.org>
# 
# arch/i386/kernel/cpu/common.c
#   2005/01/03 15:49:21-08:00 zwane@linuxpower.ca +13 -16
#   Cyrix MII cpuid returns stale %ecx
# 
# include/asm-i386/processor.h
#   2005/01/03 15:50:31-08:00 zwane@linuxpower.ca +3 -1
#   Cyrix MII cpuid returns stale %ecx
# 
diff -Nru a/arch/i386/kernel/cpu/common.c b/arch/i386/kernel/cpu/common.c
--- a/arch/i386/kernel/cpu/common.c	2005-01-04 19:29:52 -08:00
+++ b/arch/i386/kernel/cpu/common.c	2005-01-04 19:29:52 -08:00
@@ -334,21 +334,19 @@
 
 	generic_identify(c);
 
-	printk(KERN_DEBUG "CPU: After generic identify, caps: %08lx %08lx %08lx %08lx\n",
-		c->x86_capability[0],
-		c->x86_capability[1],
-		c->x86_capability[2],
-		c->x86_capability[3]);
+	printk(KERN_DEBUG "CPU: After generic identify, caps:");
+	for (i = 0; i < NCAPINTS; i++)
+		printk(" %08lx", c->x86_capability[i]);
+	printk("\n");
 
 	if (this_cpu->c_identify) {
 		this_cpu->c_identify(c);
 
-	printk(KERN_DEBUG "CPU: After vendor identify, caps:  %08lx %08lx %08lx %08lx\n",
-		c->x86_capability[0],
-		c->x86_capability[1],
-		c->x86_capability[2],
-		c->x86_capability[3]);
-}
+		printk(KERN_DEBUG "CPU: After vendor identify, caps:");
+		for (i = 0; i < NCAPINTS; i++)
+			printk(" %08lx", c->x86_capability[i]);
+		printk("\n");
+	}
 
 	/*
 	 * Vendor-specific initialization.  In this section we
@@ -398,11 +396,10 @@
 
 	/* Now the feature flags better reflect actual CPU features! */
 
-	printk(KERN_DEBUG "CPU: After all inits, caps:        %08lx %08lx %08lx %08lx\n",
-	       c->x86_capability[0],
-	       c->x86_capability[1],
-	       c->x86_capability[2],
-	       c->x86_capability[3]);
+	printk(KERN_DEBUG "CPU: After all inits, caps:");
+	for (i = 0; i < NCAPINTS; i++)
+		printk(" %08lx", c->x86_capability[i]);
+	printk("\n");
 
 	/*
 	 * On SMP, boot_cpu_data holds the common feature set between
diff -Nru a/include/asm-i386/processor.h b/include/asm-i386/processor.h
--- a/include/asm-i386/processor.h	2005-01-04 19:29:52 -08:00
+++ b/include/asm-i386/processor.h	2005-01-04 19:29:52 -08:00
@@ -126,6 +126,8 @@
 
 /*
  * Generic CPUID function
+ * clear %ecx since some cpus (Cyrix MII) do not set or clear %ecx
+ * resulting in stale register contents being returned.
  */
 static inline void cpuid(int op, int *eax, int *ebx, int *ecx, int *edx)
 {
@@ -134,7 +136,7 @@
 		  "=b" (*ebx),
 		  "=c" (*ecx),
 		  "=d" (*edx)
-		: "0" (op));
+		: "0" (op), "c"(0));
 }
 
 /*
