Revision: linux-drivers-char--ps-int-overflow--0--patch-1
Archive: dilinger@voxel.net--2005-public
Creator: Andres Salomon <dilinger@voxel.net>
Date: Fri Jan  7 17:45:21 EST 2005
Standard-date: 2005-01-07 22:45:21 GMT
Modified-files: random.c
New-patches: dilinger@voxel.net--2005-public/linux-drivers-char--ps-int-overflow--0--patch-1
Summary: integer overflow fix for poolsize_strategy()
Keywords: 

Pointed out by Brad Spengler here:
http://seclists.org/lists/fulldisclosure/2005/Jan/0270.html

The fix is simple; we're passed a size_t (generally an unsigned int
or unsigned long, depending on arch); copy_from_user expects an
unsigned long.  We can simply cast it to an unsigned long; table->maxlen
guarantees that we'll always have a small amount, anyways.


* modified files

--- orig/drivers/char/random.c
+++ mod/drivers/char/random.c
@@ -1906,7 +1906,7 @@
 			     void __user *oldval, size_t __user *oldlenp,
 			     void __user *newval, size_t newlen, void **context)
 {
-	int	len;
+	unsigned long len;
 	
 	sysctl_poolsize = random_state->poolinfo.POOLBYTES;
 
@@ -1916,7 +1916,7 @@
 	 * write case happens twice; it's harmless).
 	 */
 	if (newval && newlen) {
-		len = newlen;
+		len = (unsigned long) newlen;
 		if (len > table->maxlen)
 			len = table->maxlen;
 		if (copy_from_user(table->data, newval, len))



