# This is a BitKeeper generated diff -Nru style patch.
#
# ChangeSet
#   2005/01/03 10:59:39+01:00 perex@suse.cz 
#   [ALSA] Update user-space access from sscape driver
#   
#   Sound Scape driver
#   I see that the copy_to/from_user() functions have been updated across
#   Linux 2.4 and 2.6, and that verify_read/write() has been replaced by
#    access_ok(). I have patched the SoundScape driver accordingly.
#   
#   Signed-off-by: Chris Rankin <rankincj@yahoo.com>
#   Signed-off-by: Takashi Iwai <tiwai@suse.de>
# 
# sound/isa/sscape.c
#   2004/12/06 08:32:12+01:00 perex@suse.cz +13 -14
#   [ALSA] Update user-space access from sscape driver
#   
#   D:2004/12/06 15:32:12
#   C:Sound Scape driver
#   F:isa/sscape.c:1.18->1.19 
#   L:I see that the copy_to/from_user() functions have been updated across
#   L:Linux 2.4 and 2.6, and that verify_read/write() has been replaced by
#   L: access_ok(). I have patched the SoundScape driver accordingly.
#   Signed-off-by: Chris Rankin <rankincj@yahoo.com>
#   Signed-off-by: Takashi Iwai <tiwai@suse.de>
# 
diff -Nru a/sound/isa/sscape.c b/sound/isa/sscape.c
--- a/sound/isa/sscape.c	2005-01-22 23:15:48 -08:00
+++ b/sound/isa/sscape.c	2005-01-22 23:15:48 -08:00
@@ -487,7 +487,7 @@
 		 * the userspace pointer ...
 		 */
 		len = min(size, dma.bytes);
-		__copy_from_user(dma.area, data, len);
+		len -= __copy_from_user(dma.area, data, len);
 		data += len;
 		size -= len;
 
@@ -571,9 +571,9 @@
 		if (data < 0) {
 			snd_printk(KERN_ERR "sscape: timeout reading firmware version\n");
 			ret = -EAGAIN;
-		} else {
-			if (__copy_to_user(&bb->version, &data, sizeof(bb->version)))
-				ret = -EFAULT;
+		}
+		else if (__copy_to_user(&bb->version, &data, sizeof(bb->version))) {
+			ret = -EFAULT;
 		}
 	}
 
@@ -592,7 +592,7 @@
 {
 	unsigned long flags;
 	char __user *code;
-	int err, ret;
+	int err;
 
 	/*
 	 * We are going to have to copy this data into a special
@@ -602,12 +602,11 @@
 	 * NOTE: This buffer is 64K long! That's WAY too big to
 	 *       copy into a stack-temporary anyway.
 	 */
-	if (get_user(code, &mc->code))
+	if ( get_user(code, &mc->code) ||
+	     !access_ok(VERIFY_READ, code, SSCAPE_MICROCODE_SIZE) )
 		return -EFAULT;
-	if ((err = verify_area(VERIFY_READ, code, SSCAPE_MICROCODE_SIZE)) != 0)
-		return err;
 
-	if ((ret = upload_dma_data(sscape, code, SSCAPE_MICROCODE_SIZE)) == 0) {
+	if ((err = upload_dma_data(sscape, code, SSCAPE_MICROCODE_SIZE)) == 0) {
 		snd_printk(KERN_INFO "sscape: MIDI firmware loaded\n");
 	}
 
@@ -617,7 +616,7 @@
 
 	initialise_mpu401(sscape->mpu);
 
-	return ret;
+	return err;
 }
 
 /*
@@ -674,14 +673,14 @@
 			 * DMA-able buffer before we can upload it. We shall therefore
 			 * just check that the data pointer is valid for now ...
 			 */
-			if ((err = verify_area(VERIFY_READ, bb->code, sizeof(bb->code))) != 0)
-				return err;
+			if ( !access_ok(VERIFY_READ, bb->code, sizeof(bb->code)) )
+				return -EFAULT;
 
 			/*
 			 * Now check that we can write the firmware version number too...
 			 */
-			if ((err = verify_area(VERIFY_WRITE, &bb->version, sizeof(bb->version))) != 0)
-				return err;
+			if ( !access_ok(VERIFY_WRITE, &bb->version, sizeof(bb->version)) )
+				return -EFAULT;
 
 			err = sscape_upload_bootblock(sscape, bb);
 		}
